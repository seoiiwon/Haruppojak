"""empty message

Revision ID: 346c1bd1ed46
Revises: bcf670db976e
Create Date: 2024-07-24 22:57:27.194493

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision: str = '346c1bd1ed46'
down_revision: Union[str, None] = 'bcf670db976e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Create the new temporary table with the desired schema
    op.create_table('new_userinfo',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('userID', sa.String(), nullable=False),
        sa.Column('userPassword', sa.String(), nullable=False),
        sa.Column('userName', sa.String(), nullable=False),
        sa.Column('userBirth', sa.Integer(), nullable=False),  # new type here
        sa.Column('userEmail', sa.String(), nullable=False),
        sa.Column('userGender', sa.Integer(), nullable=False),
        sa.Column('userPpojakCoin', sa.Integer(), nullable=False),
        sa.Column('userProfileName', sa.String(), nullable=False),
        sa.Column('userProfileComment', sa.String(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('role', sa.Enum('ADMIN', 'EDITOR', 'READER', name='userrole'), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('userName'),
        sa.UniqueConstraint('userEmail'),
        sa.UniqueConstraint('userID')
    )

    # Copy data from old table to new table
    op.execute('INSERT INTO new_userinfo (id, userID, userPassword, userName, userBirth, userEmail, userGender, userPpojakCoin, userProfileName, userProfileComment) SELECT id, userID, userPassword, userName, userBirth, userEmail, userGender, userPpojakCoin, userProfileName, userProfileComment FROM userinfo')

    # Drop the old table
    op.drop_table('userinfo')

    # Rename the new table to the old table name
    op.rename_table('new_userinfo', 'userinfo')

    # ### end Alembic commands ###

def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Create the original table structure
    op.create_table('old_userinfo',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('userID', sa.String(), nullable=False),
        sa.Column('userPassword', sa.String(), nullable=False),
        sa.Column('userName', sa.String(), nullable=False),
        sa.Column('userBirth', sa.Date(), nullable=False),  # original type here
        sa.Column('userEmail', sa.String(), nullable=False),
        sa.Column('userGender', sa.Integer(), nullable=False),
        sa.Column('userPpojakCoin', sa.Integer(), nullable=False),
        sa.Column('userProfileName', sa.String(), nullable=False),
        sa.Column('userProfileComment', sa.String(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('userName'),
        sa.UniqueConstraint('userEmail'),
        sa.UniqueConstraint('userID')
    )

    # Copy data from new table to old table
    op.execute('INSERT INTO old_userinfo (id, userID, userPassword, userName, userBirth, userEmail, userGender, userPpojakCoin, userProfileName, userProfileComment) SELECT id, userID, userPassword, userName, userBirth, userEmail, userGender, userPpojakCoin, userProfileName, userProfileComment FROM userinfo')

    # Drop the modified table
    op.drop_table('userinfo')

    # Rename the old table back to the original name
    op.rename_table('old_userinfo', 'userinfo')

    # ### end Alembic commands ###
